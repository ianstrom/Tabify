{"ast":null,"code":"import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n  return nativeOfflineAudioContext => {\n    // Bug #21: Safari does not support promises yet.\n    if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n      // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n      return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then(isOfflineAudioContextCurrentTimeSupported => {\n        if (!isOfflineAudioContextCurrentTimeSupported) {\n          const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n          nativeOfflineAudioContext.oncomplete = () => {\n            scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n            scriptProcessorNode.disconnect();\n          };\n          scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n          scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n        }\n        return nativeOfflineAudioContext.startRendering();\n      });\n    }\n    return new Promise(resolve => {\n      // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n      const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n        channelCount: 1,\n        channelCountMode: 'explicit',\n        channelInterpretation: 'discrete',\n        gain: 0\n      });\n      nativeOfflineAudioContext.oncomplete = event => {\n        gainNode.disconnect();\n        resolve(event.renderedBuffer);\n      };\n      gainNode.connect(nativeOfflineAudioContext.destination);\n      nativeOfflineAudioContext.startRendering();\n    });\n  };\n};","map":{"version":3,"names":["testPromiseSupport","createRenderNativeOfflineAudioContext","cacheTestResult","createNativeGainNode","createNativeScriptProcessorNode","testOfflineAudioContextCurrentTimeSupport","nativeOfflineAudioContext","Promise","resolve","then","isOfflineAudioContextCurrentTimeSupported","scriptProcessorNode","oncomplete","onaudioprocess","disconnect","currentTime","connect","destination","startRendering","gainNode","channelCount","channelCountMode","channelInterpretation","gain","event","renderedBuffer"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/render-native-offline-audio-context.ts"],"sourcesContent":["import { testPromiseSupport } from '../helpers/test-promise-support';\nimport { IOfflineAudioCompletionEvent } from '../interfaces';\nimport { TNativeAudioBuffer, TRenderNativeOfflineAudioContextFactory } from '../types';\n\nexport const createRenderNativeOfflineAudioContext: TRenderNativeOfflineAudioContextFactory = (\n    cacheTestResult,\n    createNativeGainNode,\n    createNativeScriptProcessorNode,\n    testOfflineAudioContextCurrentTimeSupport\n) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(\n                cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)\n            ).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n\n        return new Promise<TNativeAudioBuffer>((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n\n            nativeOfflineAudioContext.oncomplete = (event: IOfflineAudioCompletionEvent) => {\n                gainNode.disconnect();\n\n                resolve(event.renderedBuffer);\n            };\n\n            gainNode.connect(nativeOfflineAudioContext.destination);\n\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,iCAAiC;AAIpE,OAAO,MAAMC,qCAAqC,GAA4CA,CAC1FC,eAAe,EACfC,oBAAoB,EACpBC,+BAA+B,EAC/BC,yCAAyC,KACzC;EACA,OAAQC,yBAAyB,IAAI;IACjC;IACA,IAAIJ,eAAe,CAACF,kBAAkB,EAAE,MAAMA,kBAAkB,CAACM,yBAAyB,CAAC,CAAC,EAAE;MAC1F;MACA,OAAOC,OAAO,CAACC,OAAO,CAClBN,eAAe,CAACG,yCAAyC,EAAEA,yCAAyC,CAAC,CACxG,CAACI,IAAI,CAAEC,yCAAyC,IAAI;QACjD,IAAI,CAACA,yCAAyC,EAAE;UAC5C,MAAMC,mBAAmB,GAAGP,+BAA+B,CAACE,yBAAyB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;UAEjGA,yBAAyB,CAACM,UAAU,GAAG,MAAK;YACxCD,mBAAmB,CAACE,cAAc,GAAG,IAAI,CAAC,CAAC;YAC3CF,mBAAmB,CAACG,UAAU,EAAE;UACpC,CAAC;UACDH,mBAAmB,CAACE,cAAc,GAAG,MAAMP,yBAAyB,CAACS,WAAW,CAAC,CAAC;UAElFJ,mBAAmB,CAACK,OAAO,CAACV,yBAAyB,CAACW,WAAW,CAAC;;QAGtE,OAAOX,yBAAyB,CAACY,cAAc,EAAE;MACrD,CAAC,CAAC;;IAGN,OAAO,IAAIX,OAAO,CAAsBC,OAAO,IAAI;MAC/C;MACA,MAAMW,QAAQ,GAAGhB,oBAAoB,CAACG,yBAAyB,EAAE;QAC7Dc,YAAY,EAAE,CAAC;QACfC,gBAAgB,EAAE,UAAU;QAC5BC,qBAAqB,EAAE,UAAU;QACjCC,IAAI,EAAE;OACT,CAAC;MAEFjB,yBAAyB,CAACM,UAAU,GAAIY,KAAmC,IAAI;QAC3EL,QAAQ,CAACL,UAAU,EAAE;QAErBN,OAAO,CAACgB,KAAK,CAACC,cAAc,CAAC;MACjC,CAAC;MAEDN,QAAQ,CAACH,OAAO,CAACV,yBAAyB,CAACW,WAAW,CAAC;MAEvDX,yBAAyB,CAACY,cAAc,EAAE;IAC9C,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}