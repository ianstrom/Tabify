{"ast":null,"code":"export const testAudioWorkletNodeOptionsClonability = audioWorkletNodeOptions => {\n  const {\n    port1,\n    port2\n  } = new MessageChannel();\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n    port2.close();\n  }\n};","map":{"version":3,"names":["testAudioWorkletNodeOptionsClonability","audioWorkletNodeOptions","port1","port2","MessageChannel","postMessage","close"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/helpers/test-audio-worklet-node-options-clonability.ts"],"sourcesContent":["import { TTestAudioWorkletNodeOptionsClonabilityFunction } from '../types';\n\nexport const testAudioWorkletNodeOptionsClonability: TTestAudioWorkletNodeOptionsClonabilityFunction = (audioWorkletNodeOptions) => {\n    const { port1, port2 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n        port2.close();\n    }\n};\n"],"mappings":"AAEA,OAAO,MAAMA,sCAAsC,GAAqDC,uBAAuB,IAAI;EAC/H,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAE,GAAG,IAAIC,cAAc,EAAE;EAE7C,IAAI;IACA;IACAF,KAAK,CAACG,WAAW,CAACJ,uBAAuB,CAAC;GAC7C,SAAS;IACNC,KAAK,CAACI,KAAK,EAAE;IACbH,KAAK,CAACG,KAAK,EAAE;;AAErB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}