{"ast":null,"code":"import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = audioBuffer => {\n  audioBuffer.getChannelData = (getChannelData => {\n    return channel => {\n      try {\n        return getChannelData.call(audioBuffer, channel);\n      } catch (err) {\n        if (err.code === 12) {\n          throw createIndexSizeError();\n        }\n        throw err;\n      }\n    };\n  })(audioBuffer.getChannelData);\n};","map":{"version":3,"names":["createIndexSizeError","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","call","err","code"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/helpers/wrap-audio-buffer-get-channel-data-method.ts"],"sourcesContent":["import { createIndexSizeError } from '../factories/index-size-error';\nimport { TNativeAudioBuffer } from '../types';\n\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer: TNativeAudioBuffer): void => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel: number) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            } catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,+BAA+B;AAGpE,OAAO,MAAMC,mCAAmC,GAAIC,WAA+B,IAAU;EACzFA,WAAW,CAACC,cAAc,GAAG,CAAEA,cAAc,IAAI;IAC7C,OAAQC,OAAe,IAAI;MACvB,IAAI;QACA,OAAOD,cAAc,CAACE,IAAI,CAACH,WAAW,EAAEE,OAAO,CAAC;OACnD,CAAC,OAAOE,GAAG,EAAE;QACV,IAAIA,GAAG,CAACC,IAAI,KAAK,EAAE,EAAE;UACjB,MAAMP,oBAAoB,EAAE;;QAGhC,MAAMM,GAAG;;IAEjB,CAAC;EACL,CAAC,EAAEJ,WAAW,CAACC,cAAc,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}