{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n    this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n    this._gain = new Gain({\n      context: this.context\n    });\n    /**\n     * Only outputs 0\n     */\n    this.output = this._gain;\n    /**\n     * no input node\n     */\n    this.input = undefined;\n    connect(this.context.getConstant(0), this._gain);\n  }\n  /**\n   * clean up\n   */\n  dispose() {\n    super.dispose();\n    disconnect(this.context.getConstant(0), this._gain);\n    return this;\n  }\n}","map":{"version":3,"names":["Gain","connect","disconnect","optionsFromArguments","SignalOperator","Zero","constructor","Object","assign","getDefaults","arguments","name","_gain","context","output","input","undefined","getConstant","dispose"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/tone/Tone/signal/Zero.ts"],"sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect, ToneAudioNodeOptions } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator<ToneAudioNodeOptions> {\n\n\treadonly name: string = \"Zero\";\n\n\t/**\n\t * The gain node which connects the constant source to the output\n\t */\n\tprivate _gain = new Gain({ context: this.context });\n\n\t/**\n\t * Only outputs 0\n\t */\n\toutput = this._gain;\n\n\t/**\n\t * no input node\n\t */\n\tinput = undefined;\n\n\tconstructor(options?: Partial<ToneAudioNodeOptions>);\n\tconstructor() {\n\t\tsuper(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n\t\tconnect(this.context.getConstant(0), this._gain);\n\t}\n\n\t/**\n\t * clean up\n\t */\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tdisconnect(this.context.getConstant(0), this._gain);\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,OAAO,EAAEC,UAAU,QAA8B,+BAA+B;AACzF,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,cAAc,QAAQ,kBAAkB;AAEjD;;;;;;AAMA,OAAM,MAAOC,IAAK,SAAQD,cAAoC;EAoB7DE,YAAA;IACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAACE,IAAI,CAACI,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC,CAAC;IAnBjE,KAAAC,IAAI,GAAW,MAAM;IAE9B;;;IAGQ,KAAAC,KAAK,GAAG,IAAIZ,IAAI,CAAC;MAAEa,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAEnD;;;IAGA,KAAAC,MAAM,GAAG,IAAI,CAACF,KAAK;IAEnB;;;IAGA,KAAAG,KAAK,GAAGC,SAAS;IAKhBf,OAAO,CAAC,IAAI,CAACY,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACL,KAAK,CAAC;EACjD;EAEA;;;EAGAM,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACfhB,UAAU,CAAC,IAAI,CAACW,OAAO,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAACL,KAAK,CAAC;IACnD,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}