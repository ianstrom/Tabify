{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n  const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n  assignNativeAudioNodeOptions(nativeDelayNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n  return nativeDelayNode;\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","createNativeDelayNode","nativeContext","options","nativeDelayNode","createDelay","maxDelayTime"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/native-delay-node.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDelayNodeFactory } from '../types';\n\nexport const createNativeDelayNode: TNativeDelayNodeFactory = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n\n    return nativeDelayNode;\n};\n"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,4BAA4B,QAAQ,6CAA6C;AAG1F,OAAO,MAAMC,qBAAqB,GAA4BA,CAACC,aAAa,EAAEC,OAAO,KAAI;EACrF,MAAMC,eAAe,GAAGF,aAAa,CAACG,WAAW,CAACF,OAAO,CAACG,YAAY,CAAC;EAEvEN,4BAA4B,CAACI,eAAe,EAAED,OAAO,CAAC;EAEtDJ,oCAAoC,CAACK,eAAe,EAAED,OAAO,EAAE,WAAW,CAAC;EAE3E,OAAOC,eAAe;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}