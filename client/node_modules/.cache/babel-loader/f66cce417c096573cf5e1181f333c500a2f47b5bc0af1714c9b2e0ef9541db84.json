{"ast":null,"code":"import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = channelSplitterNode => {\n  const channelCount = channelSplitterNode.numberOfOutputs;\n  // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n  Object.defineProperty(channelSplitterNode, 'channelCount', {\n    get: () => channelCount,\n    set: value => {\n      if (value !== channelCount) {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n  Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n    get: () => 'explicit',\n    set: value => {\n      if (value !== 'explicit') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n  // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n  Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n    get: () => 'discrete',\n    set: value => {\n      if (value !== 'discrete') {\n        throw createInvalidStateError();\n      }\n    }\n  });\n};","map":{"version":3,"names":["createInvalidStateError","wrapChannelSplitterNode","channelSplitterNode","channelCount","numberOfOutputs","Object","defineProperty","get","set","value"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/helpers/wrap-channel-splitter-node.ts"],"sourcesContent":["import { createInvalidStateError } from '../factories/invalid-state-error';\nimport { TNativeChannelSplitterNode } from '../types';\n\nexport const wrapChannelSplitterNode = (channelSplitterNode: TNativeChannelSplitterNode): void => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,kCAAkC;AAG1E,OAAO,MAAMC,uBAAuB,GAAIC,mBAA+C,IAAU;EAC7F,MAAMC,YAAY,GAAGD,mBAAmB,CAACE,eAAe;EAExD;EACAC,MAAM,CAACC,cAAc,CAACJ,mBAAmB,EAAE,cAAc,EAAE;IACvDK,GAAG,EAAEA,CAAA,KAAMJ,YAAY;IACvBK,GAAG,EAAGC,KAAK,IAAI;MACX,IAAIA,KAAK,KAAKN,YAAY,EAAE;QACxB,MAAMH,uBAAuB,EAAE;;IAEvC;GACH,CAAC;EAEF;EACAK,MAAM,CAACC,cAAc,CAACJ,mBAAmB,EAAE,kBAAkB,EAAE;IAC3DK,GAAG,EAAEA,CAAA,KAAM,UAAU;IACrBC,GAAG,EAAGC,KAAK,IAAI;MACX,IAAIA,KAAK,KAAK,UAAU,EAAE;QACtB,MAAMT,uBAAuB,EAAE;;IAEvC;GACH,CAAC;EAEF;EACAK,MAAM,CAACC,cAAc,CAACJ,mBAAmB,EAAE,uBAAuB,EAAE;IAChEK,GAAG,EAAEA,CAAA,KAAM,UAAU;IACrBC,GAAG,EAAGC,KAAK,IAAI;MACX,IAAIA,KAAK,KAAK,UAAU,EAAE;QACtB,MAAMT,uBAAuB,EAAE;;IAEvC;GACH,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}