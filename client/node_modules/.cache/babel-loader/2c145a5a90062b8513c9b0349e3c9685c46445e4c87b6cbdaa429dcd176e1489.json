{"ast":null,"code":"export const createNativePeriodicWaveFactory = createIndexSizeError => {\n  return (nativeContext, _ref) => {\n    let {\n      disableNormalization,\n      imag,\n      real\n    } = _ref;\n    // Bug #180: Safari does not allow to use ordinary arrays.\n    const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n    const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n    const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, {\n      disableNormalization\n    });\n    // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n    if (Array.from(imag).length < 2) {\n      throw createIndexSizeError();\n    }\n    return nativePeriodicWave;\n  };\n};","map":{"version":3,"names":["createNativePeriodicWaveFactory","createIndexSizeError","nativeContext","_ref","disableNormalization","imag","real","convertedImag","Float32Array","convertedReal","nativePeriodicWave","createPeriodicWave","Array","from","length"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/native-periodic-wave-factory.ts"],"sourcesContent":["import { TNativePeriodicWaveFactoryFactory } from '../types';\n\nexport const createNativePeriodicWaveFactory: TNativePeriodicWaveFactoryFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n\n        return nativePeriodicWave;\n    };\n};\n"],"mappings":"AAEA,OAAO,MAAMA,+BAA+B,GAAuCC,oBAAoB,IAAI;EACvG,OAAO,CAACC,aAAa,EAAAC,IAAA,KAA0C;IAAA,IAAxC;MAAEC,oBAAoB;MAAEC,IAAI;MAAEC;IAAI,CAAE,GAAAH,IAAA;IACvD;IACA,MAAMI,aAAa,GAAGF,IAAI,YAAYG,YAAY,GAAGH,IAAI,GAAG,IAAIG,YAAY,CAACH,IAAI,CAAC;IAClF,MAAMI,aAAa,GAAGH,IAAI,YAAYE,YAAY,GAAGF,IAAI,GAAG,IAAIE,YAAY,CAACF,IAAI,CAAC;IAElF,MAAMI,kBAAkB,GAAGR,aAAa,CAACS,kBAAkB,CAACF,aAAa,EAAEF,aAAa,EAAE;MAAEH;IAAoB,CAAE,CAAC;IAEnH;IACA,IAAIQ,KAAK,CAACC,IAAI,CAACR,IAAI,CAAC,CAACS,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMb,oBAAoB,EAAE;;IAGhC,OAAOS,kBAAkB;EAC7B,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}