{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 2,\n  /*\n   * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n   * behavior.\n   */\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n  return class StereoPannerNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;\n      super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n      this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n    }\n    get pan() {\n      return this._pan;\n    }\n  };\n};","map":{"version":3,"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","pan","createStereoPannerNodeConstructor","audioNodeConstructor","createAudioParam","createNativeStereoPannerNode","createStereoPannerNodeRenderer","getNativeContext","isNativeOfflineAudioContext","StereoPannerNode","constructor","context","options","nativeContext","mergedOptions","nativeStereoPannerNode","isOffline","stereoPannerNodeRenderer","_pan"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/stereo-panner-node-constructor.ts"],"sourcesContent":["import { IAudioParam, IStereoPannerNode, IStereoPannerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TStereoPannerNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n} as const;\n\nexport const createStereoPannerNodeConstructor: TStereoPannerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createNativeStereoPannerNode,\n    createStereoPannerNodeRenderer,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class StereoPannerNode<T extends TContext> extends audioNodeConstructor<T> implements IStereoPannerNode<T> {\n        private _pan: IAudioParam;\n\n        constructor(context: T, options?: Partial<IStereoPannerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createStereoPannerNodeRenderer() : null);\n\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n\n        get pan(): IAudioParam {\n            return this._pan;\n        }\n    };\n};\n"],"mappings":"AAGA,MAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACf;;;;EAIAC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE,UAAU;EACjCC,GAAG,EAAE;CACC;AAEV,OAAO,MAAMC,iCAAiC,GAAwCA,CAClFC,oBAAoB,EACpBC,gBAAgB,EAChBC,4BAA4B,EAC5BC,8BAA8B,EAC9BC,gBAAgB,EAChBC,2BAA2B,KAC3B;EACA,OAAO,MAAMC,gBAAqC,SAAQN,oBAAuB;IAG7EO,YAAYC,OAAU,EAAEC,OAAuC;MAC3D,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,aAAa,GAAG;QAAE,GAAGjB,eAAe;QAAE,GAAGe;MAAO,CAAE;MACxD,MAAMG,sBAAsB,GAAGV,4BAA4B,CAACQ,aAAa,EAAEC,aAAa,CAAC;MACzF,MAAME,SAAS,GAAGR,2BAA2B,CAACK,aAAa,CAAC;MAC5D,MAAMI,wBAAwB,GAAiCD,SAAS,GAAGV,8BAA8B,EAAE,GAAG,IAAK;MAEnH,KAAK,CAACK,OAAO,EAAE,KAAK,EAAEI,sBAAsB,EAAEE,wBAAwB,CAAC;MAEvE,IAAI,CAACC,IAAI,GAAGd,gBAAgB,CAAC,IAAI,EAAEY,SAAS,EAAED,sBAAsB,CAACd,GAAG,CAAC;IAC7E;IAEA,IAAIA,GAAGA,CAAA;MACH,OAAO,IAAI,CAACiB,IAAI;IACpB;GACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}