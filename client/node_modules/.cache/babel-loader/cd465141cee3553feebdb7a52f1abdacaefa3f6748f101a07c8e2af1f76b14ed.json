{"ast":null,"code":"export const createFetchSource = createAbortError => {\n  return async url => {\n    try {\n      const response = await fetch(url);\n      if (response.ok) {\n        return [await response.text(), response.url];\n      }\n    } catch {\n      // Ignore errors.\n    } // tslint:disable-line:no-empty\n    throw createAbortError();\n  };\n};","map":{"version":3,"names":["createFetchSource","createAbortError","url","response","fetch","ok","text"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/fetch-source.ts"],"sourcesContent":["import { TFetchSourceFactory } from '../types';\n\nexport const createFetchSource: TFetchSourceFactory = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        } catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n\n        throw createAbortError();\n    };\n};\n"],"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAyBC,gBAAgB,IAAI;EACvE,OAAO,MAAOC,GAAG,IAAI;IACjB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAEjC,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACb,OAAO,CAAC,MAAMF,QAAQ,CAACG,IAAI,EAAE,EAAEH,QAAQ,CAACD,GAAG,CAAC;;KAEnD,CAAC,MAAM;MACJ;IAAA,CACH,CAAC;IAEF,MAAMD,gBAAgB,EAAE;EAC5B,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}