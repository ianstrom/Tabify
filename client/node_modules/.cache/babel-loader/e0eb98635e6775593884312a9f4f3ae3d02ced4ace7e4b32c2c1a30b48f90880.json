{"ast":null,"code":"import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n  return (nativeContext, options) => {\n    const nativeAnalyserNode = nativeContext.createAnalyser();\n    // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n    assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n    // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n    if (!(options.maxDecibels > options.minDecibels)) {\n      throw createIndexSizeError();\n    }\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n    assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n    // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n    if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n      wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n    }\n    return nativeAnalyserNode;\n  };\n};","map":{"version":3,"names":["assignNativeAudioNodeOption","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","cacheTestResult","createIndexSizeError","nativeContext","options","nativeAnalyserNode","createAnalyser","maxDecibels","minDecibels"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/native-analyser-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nimport { TNativeAnalyserNodeFactoryFactory } from '../types';\n\nexport const createNativeAnalyserNodeFactory: TNativeAnalyserNodeFactoryFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (\n            !cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () =>\n                testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode)\n            )\n        ) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n\n        return nativeAnalyserNode;\n    };\n};\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,4CAA4C;AACxF,SAASC,4BAA4B,QAAQ,6CAA6C;AAC1F,SAASC,mDAAmD,QAAQ,yEAAyE;AAC7I,SAASC,4CAA4C,QAAQ,iEAAiE;AAG9H,OAAO,MAAMC,+BAA+B,GAAsCA,CAACC,eAAe,EAAEC,oBAAoB,KAAI;EACxH,OAAO,CAACC,aAAa,EAAEC,OAAO,KAAI;IAC9B,MAAMC,kBAAkB,GAAGF,aAAa,CAACG,cAAc,EAAE;IAEzD;IACAT,4BAA4B,CAACQ,kBAAkB,EAAED,OAAO,CAAC;IAEzD;IACA,IAAI,EAAEA,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,WAAW,CAAC,EAAE;MAC9C,MAAMN,oBAAoB,EAAE;;IAGhCN,2BAA2B,CAACS,kBAAkB,EAAED,OAAO,EAAE,SAAS,CAAC;IACnER,2BAA2B,CAACS,kBAAkB,EAAED,OAAO,EAAE,aAAa,CAAC;IACvER,2BAA2B,CAACS,kBAAkB,EAAED,OAAO,EAAE,aAAa,CAAC;IACvER,2BAA2B,CAACS,kBAAkB,EAAED,OAAO,EAAE,uBAAuB,CAAC;IAEjF;IACA,IACI,CAACH,eAAe,CAACH,mDAAmD,EAAE,MAClEA,mDAAmD,CAACO,kBAAkB,CAAC,CAC1E,EACH;MACEN,4CAA4C,CAACM,kBAAkB,CAAC;;IAGpE,OAAOA,kBAAkB;EAC7B,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}