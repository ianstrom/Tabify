{"ast":null,"code":"const DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class ChannelMergerNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      const channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n  };\n};","map":{"version":3,"names":["DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","numberOfInputs","createChannelMergerNodeConstructor","audioNodeConstructor","createChannelMergerNodeRenderer","createNativeChannelMergerNode","getNativeContext","isNativeOfflineAudioContext","ChannelMergerNode","constructor","context","options","nativeContext","mergedOptions","nativeChannelMergerNode","channelMergerNodeRenderer"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/channel-merger-node-constructor.ts"],"sourcesContent":["import { IChannelMergerOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TChannelMergerNodeConstructorFactory, TContext } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n} as const;\n\nexport const createChannelMergerNodeConstructor: TChannelMergerNodeConstructorFactory = (\n    audioNodeConstructor,\n    createChannelMergerNodeRenderer,\n    createNativeChannelMergerNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class ChannelMergerNode<T extends TContext> extends audioNodeConstructor<T> {\n        constructor(context: T, options?: Partial<IChannelMergerOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null)\n            );\n\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n"],"mappings":"AAGA,MAAMA,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACfC,gBAAgB,EAAE,UAAU;EAC5BC,qBAAqB,EAAE,UAAU;EACjCC,cAAc,EAAE;CACV;AAEV,OAAO,MAAMC,kCAAkC,GAAyCA,CACpFC,oBAAoB,EACpBC,+BAA+B,EAC/BC,6BAA6B,EAC7BC,gBAAgB,EAChBC,2BAA2B,KAC3B;EACA,OAAO,MAAMC,iBAAsC,SAAQL,oBAAuB;IAC9EM,YAAYC,OAAU,EAAEC,OAAwC;MAC5D,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,aAAa,GAAG;QAAE,GAAGhB,eAAe;QAAE,GAAGc;MAAO,CAAE;MACxD,MAAMG,uBAAuB,GAAGT,6BAA6B,CAACO,aAAa,EAAEC,aAAa,CAAC;MAC3F,MAAME,yBAAyB,GAC1BR,2BAA2B,CAACK,aAAa,CAAC,GAAGR,+BAA+B,EAAE,GAAG,IACrF;MAED,KAAK,CAACM,OAAO,EAAE,KAAK,EAAEI,uBAAuB,EAAEC,yBAAyB,CAAC;IAC7E;GACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}