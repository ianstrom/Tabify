{"ast":null,"code":"export const testPromiseSupport = nativeContext => {\n  // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n  const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n  try {\n    // Bug #1: Safari requires a successCallback.\n    const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n      // Ignore the success callback.\n    });\n    if (promise === undefined) {\n      return false;\n    }\n    promise.catch(() => {\n      // Ignore rejected errors.\n    });\n    return true;\n  } catch {\n    // Ignore errors.\n  }\n  return false;\n};","map":{"version":3,"names":["testPromiseSupport","nativeContext","uint32Array","Uint32Array","promise","decodeAudioData","buffer","undefined","catch"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/helpers/test-promise-support.ts"],"sourcesContent":["import { TNativeContext } from '../types';\n\nexport const testPromiseSupport = (nativeContext: TNativeContext): boolean => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(<ArrayBuffer>uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n\n        if (promise === undefined) {\n            return false;\n        }\n\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n\n        return true;\n    } catch {\n        // Ignore errors.\n    }\n\n    return false;\n};\n"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAIC,aAA6B,IAAa;EACzE;EACA,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAAC,CAAC,UAAU,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAElI,IAAI;IACA;IACA,MAAMC,OAAO,GAAGH,aAAa,CAACI,eAAe,CAAcH,WAAW,CAACI,MAAM,EAAE,MAAK;MAChF;IAAA,CACH,CAAC;IAEF,IAAIF,OAAO,KAAKG,SAAS,EAAE;MACvB,OAAO,KAAK;;IAGhBH,OAAO,CAACI,KAAK,CAAC,MAAK;MACf;IAAA,CACH,CAAC;IAEF,OAAO,IAAI;GACd,CAAC,MAAM;IACJ;EAAA;EAGJ,OAAO,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}