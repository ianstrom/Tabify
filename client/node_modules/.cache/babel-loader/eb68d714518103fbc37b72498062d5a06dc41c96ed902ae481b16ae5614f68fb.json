{"ast":null,"code":"export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n  return (nativeAudioContext, _ref) => {\n    let {\n      mediaStreamTrack\n    } = _ref;\n    // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n    if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n      return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n    }\n    const mediaStream = new MediaStream([mediaStreamTrack]);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n    // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n    if (mediaStreamTrack.kind !== 'audio') {\n      throw createInvalidStateError();\n    }\n    // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n    if (isNativeOfflineAudioContext(nativeAudioContext)) {\n      throw new TypeError();\n    }\n    return nativeMediaStreamAudioSourceNode;\n  };\n};","map":{"version":3,"names":["createNativeMediaStreamTrackAudioSourceNodeFactory","createInvalidStateError","isNativeOfflineAudioContext","nativeAudioContext","_ref","mediaStreamTrack","createMediaStreamTrackSource","mediaStream","MediaStream","nativeMediaStreamAudioSourceNode","createMediaStreamSource","kind","TypeError"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/native-media-stream-track-audio-source-node-factory.ts"],"sourcesContent":["import { TNativeMediaStreamTrackAudioSourceNodeFactoryFactory } from '../types';\n\nexport const createNativeMediaStreamTrackAudioSourceNodeFactory: TNativeMediaStreamTrackAudioSourceNodeFactoryFactory = (\n    createInvalidStateError,\n    isNativeOfflineAudioContext\n) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n"],"mappings":"AAEA,OAAO,MAAMA,kDAAkD,GAAyDA,CACpHC,uBAAuB,EACvBC,2BAA2B,KAC3B;EACA,OAAO,CAACC,kBAAkB,EAAAC,IAAA,KAA0B;IAAA,IAAxB;MAAEC;IAAgB,CAAE,GAAAD,IAAA;IAC5C;IACA,IAAI,OAAOD,kBAAkB,CAACG,4BAA4B,KAAK,UAAU,EAAE;MACvE,OAAOH,kBAAkB,CAACG,4BAA4B,CAACD,gBAAgB,CAAC;;IAG5E,MAAME,WAAW,GAAG,IAAIC,WAAW,CAAC,CAACH,gBAAgB,CAAC,CAAC;IACvD,MAAMI,gCAAgC,GAAGN,kBAAkB,CAACO,uBAAuB,CAACH,WAAW,CAAC;IAEhG;IACA,IAAIF,gBAAgB,CAACM,IAAI,KAAK,OAAO,EAAE;MACnC,MAAMV,uBAAuB,EAAE;;IAGnC;IACA,IAAIC,2BAA2B,CAACC,kBAAkB,CAAC,EAAE;MACjD,MAAM,IAAIS,SAAS,EAAE;;IAGzB,OAAOH,gCAAgC;EAC3C,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}