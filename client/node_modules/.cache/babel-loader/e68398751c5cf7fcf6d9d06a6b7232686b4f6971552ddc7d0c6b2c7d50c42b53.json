{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/interfaces/audio-node.ts"],"sourcesContent":["import { TChannelCountMode, TChannelInterpretation, TContext } from '../types';\nimport { IAudioParam } from './audio-param';\nimport { IEventTarget } from './event-target';\n\nexport interface IAudioNode<T extends TContext, EventMap extends Record<string, Event> = {}> extends IEventTarget<EventMap> {\n    channelCount: number;\n\n    channelCountMode: TChannelCountMode;\n\n    channelInterpretation: TChannelInterpretation;\n\n    readonly context: T;\n\n    readonly numberOfInputs: number;\n\n    readonly numberOfOutputs: number;\n\n    connect<U extends TContext, OtherEventMap extends Record<string, Event>, V extends IAudioNode<U, OtherEventMap>>(\n        destinationNode: V,\n        output?: number,\n        input?: number\n    ): V;\n    connect(destinationParam: IAudioParam, output?: number): void;\n\n    disconnect(output?: number): void;\n    disconnect<U extends TContext, OtherEventMap extends Record<string, Event>>(\n        destinationNode: IAudioNode<U, OtherEventMap>,\n        output?: number,\n        input?: number\n    ): void;\n    disconnect(destinationParam: IAudioParam, output?: number): void;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}