{"ast":null,"code":"export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport function now() {\n  return getContext().now();\n}\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate() {\n  return getContext().immediate();\n}\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport() {\n  return getContext().transport;\n}\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination() {\n  return getContext().destination;\n}\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener() {\n  return getContext().listener;\n}\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * Get the singleton attached to the global context.\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport function getDraw() {\n  return getContext().draw;\n}\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n  return ToneAudioBuffer.loaded();\n}\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;","map":{"version":3,"names":["getContext","setContext","ToneAudioBuffer","start","supported","now","immediate","Transport","transport","getTransport","Destination","destination","Master","getDestination","Listener","listener","getListener","Draw","draw","getDraw","context","loaded","ToneAudioBuffers","ToneBufferSource","Buffer","Buffers","BufferSource"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/tone/Tone/index.ts"],"sourcesContent":["export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nimport { Seconds } from \"./core/type/Units\";\nexport { supported } from \"./core/context/AudioContext\";\n\n/**\n * The current audio context time of the global [[Context]]. \n * See [[Context.now]]\n * @category Core\n */\nexport function now(): Seconds {\n\treturn getContext().now();\n}\n\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport function immediate(): Seconds {\n\treturn getContext().immediate();\n}\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport function getTransport(): import(\"./core/clock/Transport\").Transport {\n\treturn getContext().transport;\n}\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n\n/**\n * @deprecated Use [[Destination]]\n */\nexport const Master = getContext().destination;\n\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport function getDestination(): import(\"./core/context/Destination\").Destination {\n\treturn getContext().destination;\n}\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport function getListener(): import(\"./core/context/Listener\").Listener {\n\treturn getContext().listener;\n}\n\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n\n/**\n * Get the singleton attached to the global context. \n * Draw is used to synchronize the draw frame with the Transport's callbacks. \n * See [[Draw]]\n * @category Core\n */\nexport function getDraw(): import(\"./core/util/Draw\").Draw {\n\treturn getContext().draw;\n}\n\n/**\n * A reference to the global context\n * See [[Context]]\n */\nexport const context = getContext();\n\n/**\n * Promise which resolves when all of the loading promises are resolved. \n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport function loaded() {\n\treturn ToneAudioBuffer.loaded();\n}\n\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer: typeof ToneAudioBuffer = ToneAudioBuffer;\nexport const Buffers: typeof ToneAudioBuffers = ToneAudioBuffers;\nexport const BufferSource: typeof ToneBufferSource = ToneBufferSource;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,eAAe;AACtD,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,SAASD,UAAU,QAAQ,eAAe;AAC1C,SAASE,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,QAAQ,eAAe;AAErC,SAASC,SAAS,QAAQ,6BAA6B;AAEvD;;;;;AAKA,OAAM,SAAUC,GAAGA,CAAA;EAClB,OAAOL,UAAU,EAAE,CAACK,GAAG,EAAE;AAC1B;AAEA;;;;;AAKA,OAAM,SAAUC,SAASA,CAAA;EACxB,OAAON,UAAU,EAAE,CAACM,SAAS,EAAE;AAChC;AAEA;;;;;AAKA,OAAO,MAAMC,SAAS,GAAGP,UAAU,EAAE,CAACQ,SAAS;AAE/C;;;;;AAKA,OAAM,SAAUC,YAAYA,CAAA;EAC3B,OAAOT,UAAU,EAAE,CAACQ,SAAS;AAC9B;AAEA;;;;;AAKA,OAAO,MAAME,WAAW,GAAGV,UAAU,EAAE,CAACW,WAAW;AAEnD;;;AAGA,OAAO,MAAMC,MAAM,GAAGZ,UAAU,EAAE,CAACW,WAAW;AAE9C;;;;;AAKA,OAAM,SAAUE,cAAcA,CAAA;EAC7B,OAAOb,UAAU,EAAE,CAACW,WAAW;AAChC;AAEA;;;;AAIA,OAAO,MAAMG,QAAQ,GAAGd,UAAU,EAAE,CAACe,QAAQ;AAE7C;;;;AAIA,OAAM,SAAUC,WAAWA,CAAA;EAC1B,OAAOhB,UAAU,EAAE,CAACe,QAAQ;AAC7B;AAEA;;;;;AAKA,OAAO,MAAME,IAAI,GAAGjB,UAAU,EAAE,CAACkB,IAAI;AAErC;;;;;;AAMA,OAAM,SAAUC,OAAOA,CAAA;EACtB,OAAOnB,UAAU,EAAE,CAACkB,IAAI;AACzB;AAEA;;;;AAIA,OAAO,MAAME,OAAO,GAAGpB,UAAU,EAAE;AAEnC;;;;;AAKA,OAAM,SAAUqB,MAAMA,CAAA;EACrB,OAAOnB,eAAe,CAACmB,MAAM,EAAE;AAChC;AAEA;AACA,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,OAAO,MAAMC,MAAM,GAA2BtB,eAAe;AAC7D,OAAO,MAAMuB,OAAO,GAA4BH,gBAAgB;AAChE,OAAO,MAAMI,YAAY,GAA4BH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}