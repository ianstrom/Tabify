{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n  const nativeGainNode = nativeContext.createGain();\n  assignNativeAudioNodeOptions(nativeGainNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n  return nativeGainNode;\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","createNativeGainNode","nativeContext","options","nativeGainNode","createGain"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/native-gain-node.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeGainNodeFactory } from '../types';\n\nexport const createNativeGainNode: TNativeGainNodeFactory = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n\n    return nativeGainNode;\n};\n"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,4BAA4B,QAAQ,6CAA6C;AAG1F,OAAO,MAAMC,oBAAoB,GAA2BA,CAACC,aAAa,EAAEC,OAAO,KAAI;EACnF,MAAMC,cAAc,GAAGF,aAAa,CAACG,UAAU,EAAE;EAEjDL,4BAA4B,CAACI,cAAc,EAAED,OAAO,CAAC;EAErDJ,oCAAoC,CAACK,cAAc,EAAED,OAAO,EAAE,MAAM,CAAC;EAErE,OAAOC,cAAc;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}