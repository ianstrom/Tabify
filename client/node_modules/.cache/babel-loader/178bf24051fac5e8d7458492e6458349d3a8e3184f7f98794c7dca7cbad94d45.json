{"ast":null,"code":"import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n  return isOffline => {\n    return (audioNode, count) => {\n      const cycleCounter = cycleCounters.get(audioNode);\n      if (cycleCounter === undefined) {\n        if (!isOffline && isActiveAudioNode(audioNode)) {\n          const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n          const {\n            outputs\n          } = getAudioNodeConnections(audioNode);\n          for (const output of outputs) {\n            if (isAudioNodeOutputConnection(output)) {\n              const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n              disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n            } else {\n              const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n              nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n            }\n          }\n        }\n        cycleCounters.set(audioNode, count);\n      } else {\n        cycleCounters.set(audioNode, cycleCounter + count);\n      }\n    };\n  };\n};","map":{"version":3,"names":["isAudioNodeOutputConnection","createIncrementCycleCounterFactory","cycleCounters","disconnectNativeAudioNodeFromNativeAudioNode","getAudioNodeConnections","getNativeAudioNode","getNativeAudioParam","isActiveAudioNode","isOffline","audioNode","count","cycleCounter","get","undefined","nativeSourceAudioNode","outputs","output","nativeDestinationAudioNode","nativeDestinationAudioParam","disconnect","set"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/increment-cycle-counter-factory.ts"],"sourcesContent":["import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { TIncrementCycleCounterFactoryFactory } from '../types';\n\nexport const createIncrementCycleCounterFactory: TIncrementCycleCounterFactoryFactory = (\n    cycleCounters,\n    disconnectNativeAudioNodeFromNativeAudioNode,\n    getAudioNodeConnections,\n    getNativeAudioNode,\n    getNativeAudioParam,\n    isActiveAudioNode\n) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n\n                            disconnectNativeAudioNodeFromNativeAudioNode(\n                                nativeSourceAudioNode,\n                                nativeDestinationAudioNode,\n                                output[1],\n                                output[2]\n                            );\n                        } else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n\n                cycleCounters.set(audioNode, count);\n            } else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,wCAAwC;AAGpF,OAAO,MAAMC,kCAAkC,GAAyCA,CACpFC,aAAa,EACbC,4CAA4C,EAC5CC,uBAAuB,EACvBC,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,KACjB;EACA,OAAQC,SAAS,IAAI;IACjB,OAAO,CAACC,SAAS,EAAEC,KAAK,KAAI;MACxB,MAAMC,YAAY,GAAGT,aAAa,CAACU,GAAG,CAACH,SAAS,CAAC;MAEjD,IAAIE,YAAY,KAAKE,SAAS,EAAE;QAC5B,IAAI,CAACL,SAAS,IAAID,iBAAiB,CAACE,SAAS,CAAC,EAAE;UAC5C,MAAMK,qBAAqB,GAAGT,kBAAkB,CAACI,SAAS,CAAC;UAC3D,MAAM;YAAEM;UAAO,CAAE,GAAGX,uBAAuB,CAACK,SAAS,CAAC;UAEtD,KAAK,MAAMO,MAAM,IAAID,OAAO,EAAE;YAC1B,IAAIf,2BAA2B,CAACgB,MAAM,CAAC,EAAE;cACrC,MAAMC,0BAA0B,GAAGZ,kBAAkB,CAACW,MAAM,CAAC,CAAC,CAAC,CAAC;cAEhEb,4CAA4C,CACxCW,qBAAqB,EACrBG,0BAA0B,EAC1BD,MAAM,CAAC,CAAC,CAAC,EACTA,MAAM,CAAC,CAAC,CAAC,CACZ;aACJ,MAAM;cACH,MAAME,2BAA2B,GAAGZ,mBAAmB,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;cAElEF,qBAAqB,CAACK,UAAU,CAACD,2BAA2B,EAAEF,MAAM,CAAC,CAAC,CAAC,CAAC;;;;QAKpFd,aAAa,CAACkB,GAAG,CAACX,SAAS,EAAEC,KAAK,CAAC;OACtC,MAAM;QACHR,aAAa,CAACkB,GAAG,CAACX,SAAS,EAAEE,YAAY,GAAGD,KAAK,CAAC;;IAE1D,CAAC;EACL,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}