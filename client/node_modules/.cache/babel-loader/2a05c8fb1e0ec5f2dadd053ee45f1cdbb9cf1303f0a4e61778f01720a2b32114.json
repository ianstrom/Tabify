{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = createNotSupportedError => {\n  return (nativeContext, options) => {\n    const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n    assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n    // Bug #108: Safari allows a channelCount of three and above.\n    if (options.channelCount > 2) {\n      throw createNotSupportedError();\n    }\n    // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n    if (options.channelCountMode === 'max') {\n      throw createNotSupportedError();\n    }\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n    assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n    return nativeDynamicsCompressorNode;\n  };\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOptions","createNativeDynamicsCompressorNodeFactory","createNotSupportedError","nativeContext","options","nativeDynamicsCompressorNode","createDynamicsCompressor","channelCount","channelCountMode"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/native-dynamics-compressor-node-factory.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeDynamicsCompressorNodeFactoryFactory } from '../types';\n\nexport const createNativeDynamicsCompressorNodeFactory: TNativeDynamicsCompressorNodeFactoryFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n\n        // Bug #109: Only Chrome and Firefox disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n\n        return nativeDynamicsCompressorNode;\n    };\n};\n"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,4BAA4B,QAAQ,6CAA6C;AAG1F,OAAO,MAAMC,yCAAyC,GAAiDC,uBAAuB,IAAI;EAC9H,OAAO,CAACC,aAAa,EAAEC,OAAO,KAAI;IAC9B,MAAMC,4BAA4B,GAAGF,aAAa,CAACG,wBAAwB,EAAE;IAE7EN,4BAA4B,CAACK,4BAA4B,EAAED,OAAO,CAAC;IAEnE;IACA,IAAIA,OAAO,CAACG,YAAY,GAAG,CAAC,EAAE;MAC1B,MAAML,uBAAuB,EAAE;;IAGnC;IACA,IAAIE,OAAO,CAACI,gBAAgB,KAAK,KAAK,EAAE;MACpC,MAAMN,uBAAuB,EAAE;;IAGnCH,oCAAoC,CAACM,4BAA4B,EAAED,OAAO,EAAE,QAAQ,CAAC;IACrFL,oCAAoC,CAACM,4BAA4B,EAAED,OAAO,EAAE,MAAM,CAAC;IACnFL,oCAAoC,CAACM,4BAA4B,EAAED,OAAO,EAAE,OAAO,CAAC;IACpFL,oCAAoC,CAACM,4BAA4B,EAAED,OAAO,EAAE,SAAS,CAAC;IACtFL,oCAAoC,CAACM,4BAA4B,EAAED,OAAO,EAAE,WAAW,CAAC;IAExF,OAAOC,4BAA4B;EACvC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}