{"ast":null,"code":"export const testClonabilityOfAudioWorkletNodeOptions = audioWorkletNodeOptions => {\n  const {\n    port1\n  } = new MessageChannel();\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n  }\n};","map":{"version":3,"names":["testClonabilityOfAudioWorkletNodeOptions","audioWorkletNodeOptions","port1","MessageChannel","postMessage","close"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/helpers/test-clonability-of-audio-worklet-node-options.ts"],"sourcesContent":["import { IAudioWorkletNodeOptions } from '../interfaces';\n\nexport const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions: IAudioWorkletNodeOptions): void => {\n    const { port1 } = new MessageChannel();\n\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    } finally {\n        port1.close();\n    }\n};\n"],"mappings":"AAEA,OAAO,MAAMA,wCAAwC,GAAIC,uBAAiD,IAAU;EAChH,MAAM;IAAEC;EAAK,CAAE,GAAG,IAAIC,cAAc,EAAE;EAEtC,IAAI;IACA;IACAD,KAAK,CAACE,WAAW,CAACH,uBAAuB,CAAC;GAC7C,SAAS;IACNC,KAAK,CAACG,KAAK,EAAE;;AAErB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}