{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/types/dynamics-compressor-node-constructor-factory.ts"],"sourcesContent":["import { TAudioNodeConstructor } from './audio-node-constructor';\nimport { TAudioParamFactory } from './audio-param-factory';\nimport { TDynamicsCompressorNodeConstructor } from './dynamics-compressor-node-constructor';\nimport { TDynamicsCompressorNodeRendererFactory } from './dynamics-compressor-node-renderer-factory';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeDynamicsCompressorNodeFactory } from './native-dynamics-compressor-node-factory';\nimport { TNotSupportedErrorFactory } from './not-supported-error-factory';\nimport { TSetAudioNodeTailTimeFunction } from './set-audio-node-tail-time-function';\n\nexport type TDynamicsCompressorNodeConstructorFactory = (\n    audioNodeConstructor: TAudioNodeConstructor,\n    createAudioParam: TAudioParamFactory,\n    createDynamicsCompressorNodeRenderer: TDynamicsCompressorNodeRendererFactory,\n    createNativeDynamicsCompressorNode: TNativeDynamicsCompressorNodeFactory,\n    createNotSupportedError: TNotSupportedErrorFactory,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction,\n    setAudioNodeTailTime: TSetAudioNodeTailTimeFunction\n) => TDynamicsCompressorNodeConstructor;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}