{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MeterBase.getDefaults(), arguments));\n    this.name = \"MeterBase\";\n    this.input = this.output = this._analyser = new Analyser({\n      context: this.context,\n      size: 256,\n      type: \"waveform\"\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._analyser.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","optionsFromArguments","Analyser","MeterBase","constructor","getDefaults","arguments","name","input","output","_analyser","context","size","type","dispose"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/tone/Tone/component/analysis/MeterBase.ts"],"sourcesContent":["import { InputNode, OutputNode, ToneAudioNode, ToneAudioNodeOptions } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n\nexport type MeterBaseOptions = ToneAudioNodeOptions;\n\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase<Options extends MeterBaseOptions> extends ToneAudioNode<Options> {\n\n\treadonly name: string = \"MeterBase\";\n\n\t/**\n\t * The signal to be analysed\n\t */\n\tinput: InputNode;\n\n\t/**\n\t * The output is just a pass through of the input\n\t */\n\toutput: OutputNode;\n\n\t/**\n\t * The analyser node for the incoming signal\n\t */\n\tprotected _analyser: Analyser;\n\n\tconstructor(options?: Partial<MeterBaseOptions>);\n\tconstructor() {\n\t\tsuper(optionsFromArguments(MeterBase.getDefaults(), arguments));\n\n\t\tthis.input = this.output = this._analyser = new Analyser({\n\t\t\tcontext: this.context,\n\t\t\tsize: 256,\n\t\t\ttype: \"waveform\",\n\t\t});\n\t}\n\n\tdispose(): this {\n\t\tsuper.dispose();\n\t\tthis._analyser.dispose();\n\t\treturn this;\n\t}\n}\n"],"mappings":"AAAA,SAAgCA,aAAa,QAA8B,kCAAkC;AAC7G,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,QAAQ,QAAQ,YAAY;AAIrC;;;AAGA,OAAM,MAAOC,SAA4C,SAAQH,aAAsB;EAoBtFI,YAAA;IACC,KAAK,CAACH,oBAAoB,CAACE,SAAS,CAACE,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC;IAnBvD,KAAAC,IAAI,GAAW,WAAW;IAqBlC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,SAAS,GAAG,IAAIR,QAAQ,CAAC;MACxDS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,IAAI,EAAE,GAAG;MACTC,IAAI,EAAE;KACN,CAAC;EACH;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACJ,SAAS,CAACI,OAAO,EAAE;IACxB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}