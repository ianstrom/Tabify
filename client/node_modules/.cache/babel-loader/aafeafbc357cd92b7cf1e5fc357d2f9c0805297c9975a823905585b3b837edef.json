{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/types/add-audio-worklet-module-factory.ts"],"sourcesContent":["import { TAddAudioWorkletModuleFunction } from './add-audio-worklet-module-function';\nimport { TCacheTestResultFunction } from './cache-test-result-function';\nimport { TContext } from './context';\nimport { TEvaluateSourceFunction } from './evaluate-source-function';\nimport { TExposeCurrentFrameAndCurrentTimeFunction } from './expose-current-frame-and-current-time-function';\nimport { TFetchSourceFunction } from './fetch-source-function';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TGetOrCreateBackupOfflineAudioContextFunction } from './get-or-create-backup-offline-audio-context-function';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeAudioWorkletNodeConstructor } from './native-audio-worklet-node-constructor';\nimport { TNotSupportedErrorFactory } from './not-supported-error-factory';\nimport { TWindow } from './window';\n\nexport type TAddAudioWorkletModuleFactory = (\n    cacheTestResult: TCacheTestResultFunction,\n    createNotSupportedError: TNotSupportedErrorFactory,\n    evaluateSource: TEvaluateSourceFunction,\n    exposeCurrentFrameAndCurrentTime: TExposeCurrentFrameAndCurrentTimeFunction,\n    fetchSource: TFetchSourceFunction,\n    getNativeContext: TGetNativeContextFunction,\n    getOrCreateBackupOfflineAudioContext: TGetOrCreateBackupOfflineAudioContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction,\n    nativeAudioWorkletNodeConstructor: null | TNativeAudioWorkletNodeConstructor,\n    ongoingRequests: WeakMap<TContext, Map<string, Promise<void>>>,\n    resolvedRequests: WeakMap<TContext, Set<string>>,\n    testAudioWorkletProcessorPostMessageSupport: () => Promise<boolean>,\n    window: TWindow\n) => TAddAudioWorkletModuleFunction;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}