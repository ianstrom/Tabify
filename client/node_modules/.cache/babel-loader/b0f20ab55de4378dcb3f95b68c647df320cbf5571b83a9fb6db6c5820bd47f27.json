{"ast":null,"code":"import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n  constructor() {\n    super(...arguments);\n    this.name = \"Ticks\";\n    this.defaultUnits = \"i\";\n  }\n  /**\n   * Get the current time in the given units\n   */\n  _now() {\n    return this.context.transport.ticks;\n  }\n  /**\n   * Return the value of the beats in the current units\n   */\n  _beatsToUnits(beats) {\n    return this._getPPQ() * beats;\n  }\n  /**\n   * Returns the value of a second in the current units\n   */\n  _secondsToUnits(seconds) {\n    return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n  }\n  /**\n   * Returns the value of a tick in the current time units\n   */\n  _ticksToUnits(ticks) {\n    return ticks;\n  }\n  /**\n   * Return the time in ticks\n   */\n  toTicks() {\n    return this.valueOf();\n  }\n  /**\n   * Return the time in seconds\n   */\n  toSeconds() {\n    return this.valueOf() / this._getPPQ() * (60 / this._getBpm());\n  }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n  return new TicksClass(getContext(), value, units);\n}","map":{"version":3,"names":["getContext","TransportTimeClass","TicksClass","constructor","name","defaultUnits","_now","context","transport","ticks","_beatsToUnits","beats","_getPPQ","_secondsToUnits","seconds","Math","floor","_getBpm","_ticksToUnits","toTicks","valueOf","toSeconds","Ticks","value","units"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/tone/Tone/core/type/Ticks.ts"],"sourcesContent":["import { getContext } from \"../Global\";\nimport { TimeBaseUnit, TimeValue } from \"./TimeBase\";\nimport { TransportTimeClass } from \"./TransportTime\";\nimport { Seconds, Ticks } from \"./Units\";\n\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass<Ticks> {\n\n\treadonly name: string = \"Ticks\";\n\n\treadonly defaultUnits: TimeBaseUnit = \"i\";\n\n\t/**\n\t * Get the current time in the given units\n\t */\n\tprotected _now(): Ticks {\n\t\treturn this.context.transport.ticks;\n\t}\n\n\t/**\n\t * Return the value of the beats in the current units\n\t */\n\tprotected _beatsToUnits(beats: number): Ticks {\n\t\treturn this._getPPQ() * beats;\n\t}\n\n\t/**\n\t * Returns the value of a second in the current units\n\t */\n\tprotected _secondsToUnits(seconds: Seconds): Ticks {\n\t\treturn Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n\t}\n\n\t/**\n\t * Returns the value of a tick in the current time units\n\t */\n\tprotected _ticksToUnits(ticks: Ticks): Ticks {\n\t\treturn ticks;\n\t}\n\n\t/**\n\t * Return the time in ticks\n\t */\n\ttoTicks(): Ticks {\n\t\treturn this.valueOf() as Ticks;\n\t}\n\n\t/**\n\t * Return the time in seconds\n\t */\n\ttoSeconds(): Seconds {\n\t\treturn (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n\t}\n}\n\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value?: TimeValue, units?: TimeBaseUnit): TicksClass {\n\treturn new TicksClass(getContext(), value, units);\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,WAAW;AAEtC,SAASC,kBAAkB,QAAQ,iBAAiB;AAGpD;;;;;;;;AAQA,OAAM,MAAOC,UAAW,SAAQD,kBAAyB;EAAzDE,YAAA;;IAEU,KAAAC,IAAI,GAAW,OAAO;IAEtB,KAAAC,YAAY,GAAiB,GAAG;EA2C1C;EAzCC;;;EAGUC,IAAIA,CAAA;IACb,OAAO,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,KAAK;EACpC;EAEA;;;EAGUC,aAAaA,CAACC,KAAa;IACpC,OAAO,IAAI,CAACC,OAAO,EAAE,GAAGD,KAAK;EAC9B;EAEA;;;EAGUE,eAAeA,CAACC,OAAgB;IACzC,OAAOC,IAAI,CAACC,KAAK,CAACF,OAAO,IAAI,EAAE,GAAG,IAAI,CAACG,OAAO,EAAE,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EACpE;EAEA;;;EAGUM,aAAaA,CAACT,KAAY;IACnC,OAAOA,KAAK;EACb;EAEA;;;EAGAU,OAAOA,CAAA;IACN,OAAO,IAAI,CAACC,OAAO,EAAW;EAC/B;EAEA;;;EAGAC,SAASA,CAAA;IACR,OAAQ,IAAI,CAACD,OAAO,EAAE,GAAG,IAAI,CAACR,OAAO,EAAE,IAAK,EAAE,GAAG,IAAI,CAACK,OAAO,EAAE,CAAC;EACjE;;AAGD;;;;AAIA,OAAM,SAAUK,KAAKA,CAACC,KAAiB,EAAEC,KAAoB;EAC5D,OAAO,IAAItB,UAAU,CAACF,UAAU,EAAE,EAAEuB,KAAK,EAAEC,KAAK,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}