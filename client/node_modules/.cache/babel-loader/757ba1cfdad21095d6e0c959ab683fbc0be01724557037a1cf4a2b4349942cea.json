{"ast":null,"code":"export const sanitizeAudioWorkletNodeOptions = options => {\n  return {\n    ...options,\n    outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ?\n    /*\n     * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n     * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n     * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n     */\n    [options.channelCount] : Array.from({\n      length: options.numberOfOutputs\n    }, () => 1)\n  };\n};","map":{"version":3,"names":["sanitizeAudioWorkletNodeOptions","options","outputChannelCount","undefined","numberOfInputs","numberOfOutputs","channelCount","Array","from","length"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/helpers/sanitize-audio-worklet-node-options.ts"],"sourcesContent":["import { TSanitizeAudioWorkletNodeOptionsFunction } from '../types';\n\nexport const sanitizeAudioWorkletNodeOptions: TSanitizeAudioWorkletNodeOptionsFunction = (options) => {\n    return {\n        ...options,\n        outputChannelCount:\n            options.outputChannelCount !== undefined\n                ? options.outputChannelCount\n                : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                  [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n"],"mappings":"AAEA,OAAO,MAAMA,+BAA+B,GAA8CC,OAAO,IAAI;EACjG,OAAO;IACH,GAAGA,OAAO;IACVC,kBAAkB,EACdD,OAAO,CAACC,kBAAkB,KAAKC,SAAS,GAClCF,OAAO,CAACC,kBAAkB,GAC1BD,OAAO,CAACG,cAAc,KAAK,CAAC,IAAIH,OAAO,CAACI,eAAe,KAAK,CAAC;IAC7D;;;;;IAKA,CAACJ,OAAO,CAACK,YAAY,CAAC,GACtBC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAER,OAAO,CAACI;IAAe,CAAE,EAAE,MAAM,CAAC;GACpE;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}