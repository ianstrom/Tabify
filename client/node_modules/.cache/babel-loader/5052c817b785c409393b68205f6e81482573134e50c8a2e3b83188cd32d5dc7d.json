{"ast":null,"code":"export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class MediaElementAudioSourceNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n      // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n      super(context, true, nativeMediaElementAudioSourceNode, null);\n      this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n    }\n    get mediaElement() {\n      return this._nativeMediaElementAudioSourceNode.mediaElement;\n    }\n  };\n};","map":{"version":3,"names":["createMediaElementAudioSourceNodeConstructor","audioNodeConstructor","createNativeMediaElementAudioSourceNode","getNativeContext","isNativeOfflineAudioContext","MediaElementAudioSourceNode","constructor","context","options","nativeContext","nativeMediaElementAudioSourceNode","TypeError","_nativeMediaElementAudioSourceNode","mediaElement"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/media-element-audio-source-node-constructor.ts"],"sourcesContent":["import { IAudioContext, IMediaElementAudioSourceNode, IMediaElementAudioSourceOptions, IMinimalAudioContext } from '../interfaces';\nimport { TAudioNodeRenderer, TMediaElementAudioSourceNodeConstructorFactory, TNativeMediaElementAudioSourceNode } from '../types';\n\nexport const createMediaElementAudioSourceNodeConstructor: TMediaElementAudioSourceNodeConstructorFactory = (\n    audioNodeConstructor,\n    createNativeMediaElementAudioSourceNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class MediaElementAudioSourceNode<T extends IAudioContext | IMinimalAudioContext> extends audioNodeConstructor<T>\n        implements IMediaElementAudioSourceNode<T> {\n        private _nativeMediaElementAudioSourceNode: TNativeMediaElementAudioSourceNode;\n\n        constructor(context: T, options: IMediaElementAudioSourceOptions) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n\n            super(context, true, nativeMediaElementAudioSourceNode, <TAudioNodeRenderer<T>>null);\n\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n\n        get mediaElement(): HTMLMediaElement {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n"],"mappings":"AAGA,OAAO,MAAMA,4CAA4C,GAAmDA,CACxGC,oBAAoB,EACpBC,uCAAuC,EACvCC,gBAAgB,EAChBC,2BAA2B,KAC3B;EACA,OAAO,MAAMC,2BAA4E,SAAQJ,oBAAuB;IAIpHK,YAAYC,OAAU,EAAEC,OAAwC;MAC5D,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,iCAAiC,GAAGR,uCAAuC,CAACO,aAAa,EAAED,OAAO,CAAC;MAEzG;MACA,IAAIJ,2BAA2B,CAACK,aAAa,CAAC,EAAE;QAC5C,MAAME,SAAS,EAAE;;MAGrB,KAAK,CAACJ,OAAO,EAAE,IAAI,EAAEG,iCAAiC,EAAyB,IAAI,CAAC;MAEpF,IAAI,CAACE,kCAAkC,GAAGF,iCAAiC;IAC/E;IAEA,IAAIG,YAAYA,CAAA;MACZ,OAAO,IAAI,CAACD,kCAAkC,CAACC,YAAY;IAC/D;GACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}