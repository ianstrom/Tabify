{"ast":null,"code":"export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n  return class AudioDestinationNode extends audioNodeConstructor {\n    constructor(context, channelCount) {\n      const nativeContext = getNativeContext(context);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      const audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      this._isNodeOfNativeOfflineAudioContext = isOffline;\n      this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n    }\n    get channelCount() {\n      return this._nativeAudioDestinationNode.channelCount;\n    }\n    set channelCount(value) {\n      // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n      // Bug #54: Firefox does throw an IndexSizeError.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      }\n      // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n      if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n        throw createIndexSizeError();\n      }\n      this._nativeAudioDestinationNode.channelCount = value;\n    }\n    get channelCountMode() {\n      return this._nativeAudioDestinationNode.channelCountMode;\n    }\n    set channelCountMode(value) {\n      // Bug #53: No browser does throw an exception yet.\n      if (this._isNodeOfNativeOfflineAudioContext) {\n        throw createInvalidStateError();\n      }\n      this._nativeAudioDestinationNode.channelCountMode = value;\n    }\n    get maxChannelCount() {\n      return this._nativeAudioDestinationNode.maxChannelCount;\n    }\n  };\n};","map":{"version":3,"names":["createAudioDestinationNodeConstructor","audioNodeConstructor","createAudioDestinationNodeRenderer","createIndexSizeError","createInvalidStateError","createNativeAudioDestinationNode","getNativeContext","isNativeOfflineAudioContext","renderInputsOfAudioNode","AudioDestinationNode","constructor","context","channelCount","nativeContext","isOffline","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","value","maxChannelCount","channelCountMode"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/audio-destination-node-constructor.ts"],"sourcesContent":["import { IAudioDestinationNode } from '../interfaces';\nimport {\n    TAudioDestinationNodeConstructorFactory,\n    TAudioNodeRenderer,\n    TChannelCountMode,\n    TContext,\n    TNativeAudioDestinationNode\n} from '../types';\n\nexport const createAudioDestinationNodeConstructor: TAudioDestinationNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioDestinationNodeRenderer,\n    createIndexSizeError,\n    createInvalidStateError,\n    createNativeAudioDestinationNode,\n    getNativeContext,\n    isNativeOfflineAudioContext,\n    renderInputsOfAudioNode\n) => {\n    return class AudioDestinationNode<T extends TContext> extends audioNodeConstructor<T> implements IAudioDestinationNode<T> {\n        private _isNodeOfNativeOfflineAudioContext: boolean;\n\n        private _nativeAudioDestinationNode: TNativeAudioDestinationNode;\n\n        constructor(context: T, channelCount: number) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = <TAudioNodeRenderer<T, this>>(\n                (isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null)\n            );\n\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n\n        get channelCount(): number {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n\n        get channelCountMode(): TChannelCountMode {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n\n        get maxChannelCount(): number {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n"],"mappings":"AASA,OAAO,MAAMA,qCAAqC,GAA4CA,CAC1FC,oBAAoB,EACpBC,kCAAkC,EAClCC,oBAAoB,EACpBC,uBAAuB,EACvBC,gCAAgC,EAChCC,gBAAgB,EAChBC,2BAA2B,EAC3BC,uBAAuB,KACvB;EACA,OAAO,MAAMC,oBAAyC,SAAQR,oBAAuB;IAKjFS,YAAYC,OAAU,EAAEC,YAAoB;MACxC,MAAMC,aAAa,GAAGP,gBAAgB,CAACK,OAAO,CAAC;MAC/C,MAAMG,SAAS,GAAGP,2BAA2B,CAACM,aAAa,CAAC;MAC5D,MAAME,0BAA0B,GAAGV,gCAAgC,CAACQ,aAAa,EAAED,YAAY,EAAEE,SAAS,CAAC;MAC3G,MAAME,4BAA4B,GAC7BF,SAAS,GAAGZ,kCAAkC,CAACM,uBAAuB,CAAC,GAAG,IAC9E;MAED,KAAK,CAACG,OAAO,EAAE,KAAK,EAAEI,0BAA0B,EAAEC,4BAA4B,CAAC;MAE/E,IAAI,CAACC,kCAAkC,GAAGH,SAAS;MACnD,IAAI,CAACI,2BAA2B,GAAGH,0BAA0B;IACjE;IAEA,IAAIH,YAAYA,CAAA;MACZ,OAAO,IAAI,CAACM,2BAA2B,CAACN,YAAY;IACxD;IAEA,IAAIA,YAAYA,CAACO,KAAK;MAClB;MACA;MACA,IAAI,IAAI,CAACF,kCAAkC,EAAE;QACzC,MAAMb,uBAAuB,EAAE;;MAGnC;MACA,IAAIe,KAAK,GAAG,IAAI,CAACD,2BAA2B,CAACE,eAAe,EAAE;QAC1D,MAAMjB,oBAAoB,EAAE;;MAGhC,IAAI,CAACe,2BAA2B,CAACN,YAAY,GAAGO,KAAK;IACzD;IAEA,IAAIE,gBAAgBA,CAAA;MAChB,OAAO,IAAI,CAACH,2BAA2B,CAACG,gBAAgB;IAC5D;IAEA,IAAIA,gBAAgBA,CAACF,KAAK;MACtB;MACA,IAAI,IAAI,CAACF,kCAAkC,EAAE;QACzC,MAAMb,uBAAuB,EAAE;;MAGnC,IAAI,CAACc,2BAA2B,CAACG,gBAAgB,GAAGF,KAAK;IAC7D;IAEA,IAAIC,eAAeA,CAAA;MACf,OAAO,IAAI,CAACF,2BAA2B,CAACE,eAAe;IAC3D;GACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}