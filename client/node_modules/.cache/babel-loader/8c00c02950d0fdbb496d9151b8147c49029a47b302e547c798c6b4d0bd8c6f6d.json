{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/types/audio-buffer-source-node-constructor-factory.ts"],"sourcesContent":["import { TAudioBufferSourceNodeConstructor } from './audio-buffer-source-node-constructor';\nimport { TAudioBufferSourceNodeRendererFactory } from './audio-buffer-source-node-renderer-factory';\nimport { TAudioNodeConstructor } from './audio-node-constructor';\nimport { TAudioParamFactory } from './audio-param-factory';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TInvalidStateErrorFactory } from './invalid-state-error-factory';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeAudioBufferSourceNodeFactory } from './native-audio-buffer-source-node-factory';\nimport { TWrapEventListenerFunction } from './wrap-event-listener-function';\n\nexport type TAudioBufferSourceNodeConstructorFactory = (\n    audioNodeConstructor: TAudioNodeConstructor,\n    createAudioBufferSourceNodeRenderer: TAudioBufferSourceNodeRendererFactory,\n    createAudioParam: TAudioParamFactory,\n    createInvalidStateError: TInvalidStateErrorFactory,\n    createNativeAudioBufferSourceNode: TNativeAudioBufferSourceNodeFactory,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction,\n    wrapEventListener: TWrapEventListenerFunction\n) => TAudioBufferSourceNodeConstructor;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}