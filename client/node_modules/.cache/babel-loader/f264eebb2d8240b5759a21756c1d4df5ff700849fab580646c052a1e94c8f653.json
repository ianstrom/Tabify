{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/types/biquad-filter-node-constructor-factory.ts"],"sourcesContent":["import { TAudioNodeConstructor } from './audio-node-constructor';\nimport { TAudioParamFactory } from './audio-param-factory';\nimport { TBiquadFilterNodeConstructor } from './biquad-filter-node-constructor';\nimport { TBiquadFilterNodeRendererFactory } from './biquad-filter-node-renderer-factory';\nimport { TGetNativeContextFunction } from './get-native-context-function';\nimport { TInvalidAccessErrorFactory } from './invalid-access-error-factory';\nimport { TIsNativeOfflineAudioContextFunction } from './is-native-offline-audio-context-function';\nimport { TNativeBiquadFilterNodeFactory } from './native-biquad-filter-node-factory';\nimport { TSetAudioNodeTailTimeFunction } from './set-audio-node-tail-time-function';\n\nexport type TBiquadFilterNodeConstructorFactory = (\n    audioNodeConstructor: TAudioNodeConstructor,\n    createAudioParam: TAudioParamFactory,\n    createBiquadFilterNodeRenderer: TBiquadFilterNodeRendererFactory,\n    createInvalidAccessError: TInvalidAccessErrorFactory,\n    createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory,\n    getNativeContext: TGetNativeContextFunction,\n    isNativeOfflineAudioContext: TIsNativeOfflineAudioContextFunction,\n    setAudioNodeTailTime: TSetAudioNodeTailTimeFunction\n) => TBiquadFilterNodeConstructor;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}