{"ast":null,"code":"import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n  const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n  const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n  return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};","map":{"version":3,"names":["NODE_TO_PROCESSOR_MAPS","getNativeAudioNode","getValueForKey","getAudioWorkletProcessor","nativeOfflineAudioContext","proxy","nodeToProcessorMap","nativeAudioWorkletNode"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/helpers/get-audio-worklet-processor.ts"],"sourcesContent":["import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { IAudioNode, IAudioWorkletProcessor } from '../interfaces';\nimport { TContext, TNativeAudioWorkletNode, TNativeOfflineAudioContext } from '../types';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\n\nexport const getAudioWorkletProcessor = <T extends TContext>(\n    nativeOfflineAudioContext: TNativeOfflineAudioContext,\n    proxy: IAudioNode<T>\n): Promise<IAudioWorkletProcessor> => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode<T, TNativeAudioWorkletNode>(proxy);\n\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,YAAY;AAGnD,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,cAAc,QAAQ,qBAAqB;AAEpD,OAAO,MAAMC,wBAAwB,GAAGA,CACpCC,yBAAqD,EACrDC,KAAoB,KACa;EACjC,MAAMC,kBAAkB,GAAGJ,cAAc,CAACF,sBAAsB,EAAEI,yBAAyB,CAAC;EAC5F,MAAMG,sBAAsB,GAAGN,kBAAkB,CAA6BI,KAAK,CAAC;EAEpF,OAAOH,cAAc,CAACI,kBAAkB,EAAEC,sBAAsB,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}