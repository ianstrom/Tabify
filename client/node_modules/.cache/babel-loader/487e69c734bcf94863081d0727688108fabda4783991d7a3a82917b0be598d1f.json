{"ast":null,"code":"import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n  return class GainNode extends audioNodeConstructor {\n    constructor(context, options) {\n      const nativeContext = getNativeContext(context);\n      const mergedOptions = {\n        ...DEFAULT_OPTIONS,\n        ...options\n      };\n      const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n      const isOffline = isNativeOfflineAudioContext(nativeContext);\n      const gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;\n      super(context, false, nativeGainNode, gainNodeRenderer);\n      // Bug #74: Safari does not export the correct values for maxValue and minValue.\n      this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n    }\n    get gain() {\n      return this._gain;\n    }\n  };\n};","map":{"version":3,"names":["MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","gain","createGainNodeConstructor","audioNodeConstructor","createAudioParam","createGainNodeRenderer","createNativeGainNode","getNativeContext","isNativeOfflineAudioContext","GainNode","constructor","context","options","nativeContext","mergedOptions","nativeGainNode","isOffline","gainNodeRenderer","_gain"],"sources":["/Users/ianstrom/Development/code/Capstone/node_modules/standardized-audio-context/src/factories/gain-node-constructor.ts"],"sourcesContent":["import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { IAudioParam, IGainNode, IGainOptions } from '../interfaces';\nimport { TAudioNodeRenderer, TContext, TGainNodeConstructorFactory } from '../types';\n\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n} as const;\n\nexport const createGainNodeConstructor: TGainNodeConstructorFactory = (\n    audioNodeConstructor,\n    createAudioParam,\n    createGainNodeRenderer,\n    createNativeGainNode,\n    getNativeContext,\n    isNativeOfflineAudioContext\n) => {\n    return class GainNode<T extends TContext> extends audioNodeConstructor<T> implements IGainNode<T> {\n        private _gain: IAudioParam;\n\n        constructor(context: T, options?: Partial<IGainOptions>) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = <TAudioNodeRenderer<T, this>>(isOffline ? createGainNodeRenderer() : null);\n\n            super(context, false, nativeGainNode, gainNodeRenderer);\n\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n\n        get gain(): IAudioParam {\n            return this._gain;\n        }\n    };\n};\n"],"mappings":"AAAA,SAASA,0BAA0B,EAAEC,0BAA0B,QAAQ,cAAc;AAIrF,MAAMC,eAAe,GAAG;EACpBC,YAAY,EAAE,CAAC;EACfC,gBAAgB,EAAE,KAAK;EACvBC,qBAAqB,EAAE,UAAU;EACjCC,IAAI,EAAE;CACA;AAEV,OAAO,MAAMC,yBAAyB,GAAgCA,CAClEC,oBAAoB,EACpBC,gBAAgB,EAChBC,sBAAsB,EACtBC,oBAAoB,EACpBC,gBAAgB,EAChBC,2BAA2B,KAC3B;EACA,OAAO,MAAMC,QAA6B,SAAQN,oBAAuB;IAGrEO,YAAYC,OAAU,EAAEC,OAA+B;MACnD,MAAMC,aAAa,GAAGN,gBAAgB,CAACI,OAAO,CAAC;MAC/C,MAAMG,aAAa,GAAG;QAAE,GAAGjB,eAAe;QAAE,GAAGe;MAAO,CAAE;MACxD,MAAMG,cAAc,GAAGT,oBAAoB,CAACO,aAAa,EAAEC,aAAa,CAAC;MACzE,MAAME,SAAS,GAAGR,2BAA2B,CAACK,aAAa,CAAC;MAC5D,MAAMI,gBAAgB,GAAiCD,SAAS,GAAGX,sBAAsB,EAAE,GAAG,IAAK;MAEnG,KAAK,CAACM,OAAO,EAAE,KAAK,EAAEI,cAAc,EAAEE,gBAAgB,CAAC;MAEvD;MACA,IAAI,CAACC,KAAK,GAAGd,gBAAgB,CAAC,IAAI,EAAEY,SAAS,EAAED,cAAc,CAACd,IAAI,EAAEL,0BAA0B,EAAED,0BAA0B,CAAC;IAC/H;IAEA,IAAIM,IAAIA,CAAA;MACJ,OAAO,IAAI,CAACiB,KAAK;IACrB;GACH;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}