{"ast":null,"code":"import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n  const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n  assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n  assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n  assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n  return nativeBiquadFilterNode;\n};","map":{"version":3,"names":["assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","assignNativeAudioNodeOptions","createNativeBiquadFilterNode","nativeContext","options","nativeBiquadFilterNode","createBiquadFilter"],"sources":["/Users/ianstrom/Development/code/Capstone/client/node_modules/standardized-audio-context/src/factories/native-biquad-filter-node.ts"],"sourcesContent":["import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { TNativeBiquadFilterNodeFactory } from '../types';\n\nexport const createNativeBiquadFilterNode: TNativeBiquadFilterNodeFactory = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n\n    return nativeBiquadFilterNode;\n};\n"],"mappings":"AAAA,SAASA,oCAAoC,QAAQ,uDAAuD;AAC5G,SAASC,2BAA2B,QAAQ,4CAA4C;AACxF,SAASC,4BAA4B,QAAQ,6CAA6C;AAG1F,OAAO,MAAMC,4BAA4B,GAAmCA,CAACC,aAAa,EAAEC,OAAO,KAAI;EACnG,MAAMC,sBAAsB,GAAGF,aAAa,CAACG,kBAAkB,EAAE;EAEjEL,4BAA4B,CAACI,sBAAsB,EAAED,OAAO,CAAC;EAE7DL,oCAAoC,CAACM,sBAAsB,EAAED,OAAO,EAAE,GAAG,CAAC;EAC1EL,oCAAoC,CAACM,sBAAsB,EAAED,OAAO,EAAE,QAAQ,CAAC;EAC/EL,oCAAoC,CAACM,sBAAsB,EAAED,OAAO,EAAE,WAAW,CAAC;EAClFL,oCAAoC,CAACM,sBAAsB,EAAED,OAAO,EAAE,MAAM,CAAC;EAE7EJ,2BAA2B,CAACK,sBAAsB,EAAED,OAAO,EAAE,MAAM,CAAC;EAEpE,OAAOC,sBAAsB;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}